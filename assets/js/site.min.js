!function(){"use strict";function n(n,t,r,o,i){function a(e){if(s)return i(new Error("Scroll cancelled"),t[n]);var o=+new Date,f=Math.min(1,(o-c)/u),p=d(f);t[n]=p*(r-l)+l,g(f<1?a:function(){i(null,t[n])})}var c=+new Date,l=t[n],s=!1,d=e,u=350;return"function"==typeof o?i=o:(d=(o=o||{}).ease||d,u=o.duration||u,i=i||function(){}),l===r?i(new Error("Element already at target scroll position"),t[n]):(g(a),function(){s=!0})}function e(n){return.5*(1-Math.cos(Math.PI*n))}var t=function(n){var e=new XMLHttpRequest,t=function(){};return e.open("GET",n,!0),{then:function(n){return e.onload=function(){(this.status<200||this.status>=400)&&t&&t(this),n(this.response)},e.onerror=t,e.send(),{catch:function(n){t=n}}}}};t("/assets/icons/sprite.svg").then(function(n){var e=document.createElement("figure");e.style.display="none",e.innerHTML=n,document.body.insertBefore(e,document.body.children[0])}).catch(function(n){console.warn("Icon spritesheet could not be loaded\n",n)});var r=function(){return function(n,e){if(Array.isArray(n))return n;if(Symbol.iterator in Object(n))return function(n,e){var t=[],r=!0,o=!1,i=void 0;try{for(var a,c=n[Symbol.iterator]();!(r=(a=c.next()).done)&&(t.push(a.value),!e||t.length!==e);r=!0);}catch(n){o=!0,i=n}finally{try{!r&&c.return&&c.return()}finally{if(o)throw i}}return t}(n,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),o=document.scrollingElement||document.documentElement,i={scrollBox:o,find:function(n){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(n)},findAll:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return[].concat(function(n){if(Array.isArray(n)){for(var e=0,t=Array(n.length);e<n.length;e++)t[e]=n[e];return t}return Array.from(n)}(e.querySelectorAll(n)))},get scrollTop(){return o.scrollTop}},a=i.find("[data-timer]"),c=0,l=i.findAll("[data-slide]").map(function(n,e){return e?n.classList.remove("active-slide"):n.classList.add("active-slide"),n}),s=function(){l[c].classList.remove("active-slide"),c=c+1===l.length?0:c+1,l[c].classList.add("active-slide"),a.classList.add("running")};a.addEventListener("transitionend",function(){a.classList.remove("running"),setTimeout(s,125)}),setTimeout(function(){a.classList.add("running")},250);var d="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},u="undefined"!=typeof window?window:void 0!==d?d:"undefined"!=typeof self?self:{},f=Object.freeze({default:u,__moduleExports:u}),p=f&&u||f,m=function(n,e){return e={exports:{}},n(e,e.exports),e.exports}(function(n,e){var t=p.requestAnimationFrame||p.webkitRequestAnimationFrame||p.mozRequestAnimationFrame||function(n){var e=+new Date,t=Math.max(0,16-(e-r)),o=setTimeout(n,t);return r=e,o},r=+new Date,o=p.cancelAnimationFrame||p.webkitCancelAnimationFrame||p.mozCancelAnimationFrame||clearTimeout;Function.prototype.bind&&(t=t.bind(p),o=o.bind(p)),(n.exports=t).cancel=o}),h=m.cancel,v=Object.freeze({default:m,__moduleExports:m,cancel:h}),g=v&&m||v,y=function(e,t,r,o){return n("scrollTop",e,t,r,o)},w=function(n){return i.scrollTop+i.find(n).getBoundingClientRect().top-i.find("[data-header]").clientHeight},b=function(n){n.preventDefault(),y(i.scrollBox,w(this.getAttribute("href")),{duration:500})};i.findAll("[data-scroll-to]").forEach(function(n){n.addEventListener("click",b)});var E=i.find("[data-header]"),A=void 0,L=void 0,k=void 0,T=function(){(A>10&&!k||A<=10&&k)&&(k=E.classList.toggle("header--docked")),L=!1},x=function(){L||requestAnimationFrame(T),L=!0,A=i.scrollTop};x(),window.addEventListener("scroll",x);i.findAll("[data-card]").forEach(function(n){(function(n){var e=r(n,2),t=e[0],o=e[1];return t.clientHeight<o.clientHeight?t:o})(n.children).style.position="absolute",i.findAll("[data-card-flip]",n).forEach(function(e){e.addEventListener("click",function(n){return function(){return n.classList.add("card--flip")}}(n))}),i.findAll("[data-card-unflip]",n).forEach(function(e){e.addEventListener("click",function(n){return function(){return n.classList.remove("card--flip")}}(n))})});var M=document.getElementById("map");M&&t("/assets/data/map-config.json").then(function(n){var e=JSON.parse(n),t=e.key,r=e.options,o=e.marker,i=function(){return new google.maps.Map(M,r)},a=function(n){return new google.maps.Marker({position:o,map:n,icon:"/assets/media/logo/llb-map.png"})};window.initMap=function(){a(i())},document.body.appendChild(function(n){var e=document.createElement("script");return e.setAttribute("async",""),e.setAttribute("defer",""),e.setAttribute("src","https://maps.googleapis.com/maps/api/js?key="+n+"&callback=initMap"),e}(t))}).catch(function(n){return console.log(n)});var F=new Date;i.findAll("time[data-year]").forEach(function(n){n.innerHTML+=F.getFullYear()});var q=i.find("[data-header]");i.find("[data-burger]",q).addEventListener("click",function(){q.classList.toggle("header--open"),document.body.classList.toggle("noscroll")}),i.findAll("[data-scroll-to]").forEach(function(n){n.addEventListener("click",function(){q.classList.remove("header--open"),document.body.classList.remove("noscroll")})});var D={origin:window.location.host.replace(/\//g,""),subject:"Nouveau contact",recipient:"dev@udy.io"},S=i.find("[data-contact-form]");S&&S.addEventListener("submit",function(n){n.preventDefault();new XMLHttpRequest,i.find("[data-attachment]",S);var e=new FormData;Object.keys(D).forEach(function(n){return e.append(n,D[n])}),i.findAll("[data-field]",S).forEach(function(n){return e.append(n.dataset.field,n.value)}),fileInput&&e.append("attachment",fileInput.files[0]),xhr.open("POST","/inc/mailto/mailto.php",!0),xhr.addEventListener("load",function(){console.log(JSON.parse(this.response))}),xhr.send(e)})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
