!function(){"use strict";function e(e,n,a,i,r){function o(t){if(l)return r(new Error("Scroll cancelled"),n[e]);var i=+new Date,f=Math.min(1,(i-c)/u),m=d(f);n[e]=m*(a-s)+s,g(f<1?o:function(){r(null,n[e])})}var c=+new Date,s=n[e],l=!1,d=t,u=350;return"function"==typeof i?r=i:(d=(i=i||{}).ease||d,u=i.duration||u,r=r||function(){}),s===a?r(new Error("Element already at target scroll position"),n[e]):(g(o),function(){l=!0})}function t(e){return.5*(1-Math.cos(Math.PI*e))}var n=function(e){var t=new XMLHttpRequest,n=function(){};return t.open("GET",e,!0),{then:function(e){return t.onload=function(){(this.status<200||this.status>=400)&&n&&n(this),e(this.response)},t.onerror=n,t.send(),{catch:function(e){n=e}}}}};n("/assets/icons/sprite.svg").then(function(e){var t=document.createElement("figure");t.style.display="none",t.innerHTML=e,document.body.insertBefore(t,document.body.children[0])}).catch(function(e){console.warn("Icon spritesheet could not be loaded\n",e)});var a=function(){return function(e,t){if(Array.isArray(e))return e;if(Symbol.iterator in Object(e))return function(e,t){var n=[],a=!0,i=!1,r=void 0;try{for(var o,c=e[Symbol.iterator]();!(a=(o=c.next()).done)&&(n.push(o.value),!t||n.length!==t);a=!0);}catch(e){i=!0,r=e}finally{try{!a&&c.return&&c.return()}finally{if(i)throw r}}return n}(e,t);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}(),i=document.scrollingElement||document.documentElement,r={scrollBox:i,find:function(e){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(e)},findAll:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return[].concat(function(e){if(Array.isArray(e)){for(var t=0,n=Array(e.length);t<e.length;t++)n[t]=e[t];return n}return Array.from(e)}(t.querySelectorAll(e)))},get scrollTop(){return i.scrollTop}},o=r.find("[data-timer]"),c=0,s=r.findAll("[data-slide]").map(function(e,t){return t?e.classList.remove("active-slide"):e.classList.add("active-slide"),e}),l=function(){s[c].classList.remove("active-slide"),c=c+1===s.length?0:c+1,s[c].classList.add("active-slide"),o.classList.add("running")};o.addEventListener("transitionend",function(){o.classList.remove("running"),setTimeout(l,125)}),setTimeout(function(){o.classList.add("running")},250);var d="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},u="undefined"!=typeof window?window:void 0!==d?d:"undefined"!=typeof self?self:{},f=Object.freeze({default:u,__moduleExports:u}),m=f&&u||f,p=function(e,t){return t={exports:{}},e(t,t.exports),t.exports}(function(e,t){var n=m.requestAnimationFrame||m.webkitRequestAnimationFrame||m.mozRequestAnimationFrame||function(e){var t=+new Date,n=Math.max(0,16-(t-a)),i=setTimeout(e,n);return a=t,i},a=+new Date,i=m.cancelAnimationFrame||m.webkitCancelAnimationFrame||m.mozCancelAnimationFrame||clearTimeout;Function.prototype.bind&&(n=n.bind(m),i=i.bind(m)),(e.exports=n).cancel=i}),v=p.cancel,h=Object.freeze({default:p,__moduleExports:p,cancel:v}),g=h&&p||h,y=function(t,n,a,i){return e("scrollTop",t,n,a,i)},b=function(e){return r.scrollTop+r.find(e).getBoundingClientRect().top-r.find("[data-header]").clientHeight},w=function(e){e.preventDefault(),y(r.scrollBox,b(this.getAttribute("href")),{duration:500})};r.findAll("[data-scroll-to]").forEach(function(e){e.addEventListener("click",w)});var E=r.find("[data-header]"),L=void 0,A=void 0,k=void 0,T=function(){(L>10&&!k||L<=10&&k)&&(k=E.classList.toggle("header--docked")),A=!1},M=function(){A||requestAnimationFrame(T),A=!0,L=r.scrollTop};M(),window.addEventListener("scroll",M);r.findAll("[data-card]").forEach(function(e){(function(e){var t=a(e,2),n=t[0],i=t[1];return n.clientHeight<i.clientHeight?n:i})(e.children).style.position="absolute",r.findAll("[data-card-flip]",e).forEach(function(t){t.addEventListener("click",function(e){return function(){return e.classList.add("card--flip")}}(e))}),r.findAll("[data-card-unflip]",e).forEach(function(t){t.addEventListener("click",function(e){return function(){return e.classList.remove("card--flip")}}(e))})});var x=document.getElementById("map");x&&n("/assets/data/map-config.json").then(function(e){var t=JSON.parse(e),n=t.key,a=t.options,i=t.marker,r=function(){return new google.maps.Map(x,a)},o=function(e){return new google.maps.Marker({position:i,map:e,icon:"/assets/media/logo/llb-map.png"})};window.initMap=function(){o(r())},document.body.appendChild(function(e){var t=document.createElement("script");return t.setAttribute("async",""),t.setAttribute("defer",""),t.setAttribute("src","https://maps.googleapis.com/maps/api/js?key="+e+"&callback=initMap"),t}(n))}).catch(function(e){return console.log(e)});var F=new Date;r.findAll("time[data-year]").forEach(function(e){e.innerHTML+=F.getFullYear()});var q=r.find("[data-header]");r.find("[data-burger]",q).addEventListener("click",function(){q.classList.toggle("header--open"),document.body.classList.toggle("noscroll")}),r.findAll("[data-scroll-to]").forEach(function(e){e.addEventListener("click",function(){q.classList.remove("header--open"),document.body.classList.remove("noscroll")})}),function(e){e&&(r.findAll("input, textarea",e).forEach(function(e){e.addEventListener("focus",function(){e.dataset.state="ok"})}),e.addEventListener("submit",function(t){t.preventDefault();var n=new XMLHttpRequest,a=new FormData,i=!0,o=!1,c=r.find("[data-attachment]",e),s={name:r.find('[name="name"]',e),surname:r.find('[name="surname"]',e),email:r.find('[name="email"]',e),message:r.find('[name="message"]',e)};Object.values(s).forEach(function(e){e.value&&e.value.length?"email"!==e.name||/.+@.+\..+/.test(e.value)||(e.dataset.state="error",i=!1):(e.dataset.state="error",i=!1)}),!o&&i&&(o=!0,n.open("POST","http://udy.io/api/mail/",!0),e.dataset.state="sending",a.append("sitename","llb-cpa"),a.append("email",s.email.value),a.append("mailto","reception@llbcpa.ca"),a.append("message",s.message.value),a.append("subject","Nouveau contact"),a.append("name",s.name.value+" "+s.surname.value),c&&a.append("attachment",c.files[0]),n.addEventListener("load",function(){this.status>=200&&this.status<400?e.dataset.state="success":e.dataset.state="error"}),n.send(a))}))}(r.find("[data-contact-form]"))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9zY3JvbGwvaW5kZXguanMiLCJzY3JpcHRzL21vZHVsZXMvZmV0Y2guanMiLCJzY3JpcHRzL21vZHVsZXMvaWNvbi1zcHJpdGUuanMiLCJzY3JpcHRzL21vZHVsZXMvZG9tLWhlbHBlcnMuanMiLCJzY3JpcHRzL21vZHVsZXMvc2xpZGVyLmpzIiwibm9kZV9tb2R1bGVzL2dsb2JhbC93aW5kb3cuanMiLCJub2RlX21vZHVsZXMvcmFmbC9pbmRleC5qcyIsInNjcmlwdHMvbW9kdWxlcy9zY3JvbGwtdG8uanMiLCJzY3JpcHRzL21vZHVsZXMvZG9jay1oZWFkZXIuanMiLCJzY3JpcHRzL21vZHVsZXMvY2FyZC1mbGlwLmpzIiwic2NyaXB0cy9tb2R1bGVzL2dvb2dsZS1tYXAuanMiLCJzY3JpcHRzL21vZHVsZXMvZGF0ZXRpbWUtb3V0cHV0LmpzIiwic2NyaXB0cy9tb2R1bGVzL21vYmlsZS1tZW51LmpzIiwic2NyaXB0cy9tb2R1bGVzL2NvbnRhY3QtZm9ybS5qcyJdLCJuYW1lcyI6WyJzY3JvbGwiLCJwcm9wIiwiZWxlbWVudCIsInRvIiwib3B0aW9ucyIsImNhbGxiYWNrIiwiYW5pbWF0ZSIsInRpbWVzdGFtcCIsImNhbmNlbGxlZCIsIkVycm9yIiwibm93IiwiRGF0ZSIsInRpbWUiLCJNYXRoIiwibWluIiwic3RhcnQiLCJkdXJhdGlvbiIsImVhc2VkIiwiZWFzZSIsImZyb20iLCJyYWYiLCJpbk91dFNpbmUiLCJuIiwiY29zIiwiUEkiLCJmZXRjaCIsInVyaSIsInhociIsIlhNTEh0dHBSZXF1ZXN0IiwiZXJyb3JIYW5kbGVyIiwib3BlbiIsImNiIiwib25sb2FkIiwidGhpcyIsInN0YXR1cyIsInJlc3BvbnNlIiwib25lcnJvciIsInNlbmQiLCJoYW5kbGVyIiwidGhlbiIsInNwcml0ZSIsImZpZ3VyZSIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInN0eWxlIiwiZGlzcGxheSIsImlubmVySFRNTCIsImJvZHkiLCJpbnNlcnRCZWZvcmUiLCJjaGlsZHJlbiIsImNhdGNoIiwiZXJyIiwid2FybiIsInNjcm9sbEJveCIsInNjcm9sbGluZ0VsZW1lbnQiLCJkb2N1bWVudEVsZW1lbnQiLCJkb20iLCJxdWVyeSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInF1ZXJ5U2VsZWN0b3IiLCJzY29wZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJzY3JvbGxUb3AiLCJ0aW1lciIsImZpbmQiLCJpbmRleCIsInNsaWRlcyIsImZpbmRBbGwiLCJtYXAiLCJub2RlIiwiaSIsImNsYXNzTGlzdCIsInJlbW92ZSIsImFkZCIsInN3YXBTbGlkZXMiLCJhZGRFdmVudExpc3RlbmVyIiwic2V0VGltZW91dCIsIndpbmRvd18xIiwid2luZG93IiwiZ2xvYmFsIiwic2VsZiIsInJlcXVlc3QiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJmbiIsImN1cnIiLCJtcyIsIm1heCIsInByZXYiLCJyZXEiLCJjYW5jZWwiLCJjYW5jZWxBbmltYXRpb25GcmFtZSIsIndlYmtpdENhbmNlbEFuaW1hdGlvbkZyYW1lIiwibW96Q2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJjbGVhclRpbWVvdXQiLCJGdW5jdGlvbiIsInByb3RvdHlwZSIsImJpbmQiLCJtb2R1bGUiLCJzY3JvbGxfMSIsInJlc29sdmVUYXJnZXQiLCJpZCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInRvcCIsImNsaWVudEhlaWdodCIsInNjcm9sbEhhbmRsZXIiLCJlIiwicHJldmVudERlZmF1bHQiLCJnZXRBdHRyaWJ1dGUiLCJmb3JFYWNoIiwiaGVhZGVyIiwiYnVmZmVyIiwiZG9ja2VkIiwidXBkYXRlIiwidG9nZ2xlIiwicmVxdWVzdFVwZGF0ZSIsIl9yZWYiLCJmcm9udCIsIl9yZWYyIiwiYmFjayIsInBvc2l0aW9uIiwiZmxpcE5vZGUiLCJnZXRGbGlwSGFuZGxlciIsInVuZmxpcE5vZGUiLCJnZXRVbmZsaXBIYW5kbGVyIiwibWFwTm9kZSIsImdldEVsZW1lbnRCeUlkIiwiY29uZmlnIiwiSlNPTiIsInBhcnNlIiwia2V5IiwiX0pTT04kcGFyc2UiLCJtYXJrZXIiLCJpbml0IiwiZ29vZ2xlIiwibWFwcyIsIk1hcCIsIk1hcmtlciIsImluaXRNYXAiLCJhcHBlbmRDaGlsZCIsInRhZyIsInNldEF0dHJpYnV0ZSIsImdldFNjcmlwdFRhZyIsImNvbnNvbGUiLCJsb2ciLCJkYXRlIiwiZ2V0RnVsbFllYXIiLCJmb3JtIiwiaW5wdXQiLCJkYXRhc2V0Iiwic3RhdGUiLCJodHRwIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsInZhbGlkIiwic3VibWl0dGVkIiwiZmlsZUlucHV0IiwiZmllbGRzIiwidmFsdWVzIiwiZmllbGQiLCJ2YWx1ZSIsIm5hbWUiLCJ0ZXN0IiwiYXBwZW5kIiwiZW1haWwiLCJtZXNzYWdlIiwic3VybmFtZSIsImZpbGVzIl0sIm1hcHBpbmdzIjoieUJBRUEsU0FBU0EsRUFBUUMsRUFBTUMsRUFBU0MsRUFBSUMsRUFBU0MsWUE2QmxDQyxFQUFTQyxNQUNaQyxTQUNLSCxFQUNMLElBQUlJLE1BQU0sb0JBQ1ZQLEVBQVFELFFBSVJTLEdBQU8sSUFBSUMsS0FDWEMsRUFBT0MsS0FBS0MsSUFBSSxHQUFLSixFQUFNSyxHQUFTQyxHQUNwQ0MsRUFBUUMsRUFBS04sS0FFVFgsR0FBU2dCLEdBQVNkLEVBQUtnQixHQUFTQSxFQUU3QkMsSUFBSixFQUFRZCxFQUFlLGFBQ25CLEtBQU1KLEVBQVFELFVBM0N2QmMsR0FBUyxJQUFJSixLQUNiUSxFQUFPakIsRUFBUUQsR0FDZk8sR0FBWSxFQUVaVSxFQUFPRyxFQUNQTCxFQUFXLFVBRVEsbUJBQVpaLElBQ0VBLFFBR0RBLE9BQ0tjLE1BQVFBLElBQ1pkLEVBQVFZLFVBQVlBLElBQ3BCWCxHQUFZLGNBR3JCYyxJQUFTaEIsRUFDSkUsRUFDTCxJQUFJSSxNQUFNLDZDQUNWUCxFQUFRRCxPQTJCUkssaUJBdEJVLElBMkJoQixT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LFFBQVFDLE1BQVEsWUFDWmEsT0FBTyxXQUFZLGFBQ25CQSxPQUFPLFFBQVNOLEVBQU9PLE1BQU1KLFNBQzdCRyxPQUFPLFNBQVUseUJBQ2pCQSxPQUFPLFVBQVdOLEVBQU9RLFFBQVFMLFNBQ2pDRyxPQUFPLFVBQVcscUJBQ2xCQSxPQUFPLE9BQVdOLEVBQU9JLEtBQUtELE1BQXZDLElBQWdESCxFQUFPUyxRQUFRTixPQUUzREosR0FBV0osRUFBU1csT0FBTyxhQUFjUCxFQUFVVyxNQUFNLE1BRXhEN0YsaUJBQWlCLE9BQVEsV0FDeEI1QyxLQUFLQyxRQUFVLEtBQU9ELEtBQUtDLE9BQVMsTUFDakNzSCxRQUFRQyxNQUFRLFlBRWhCRCxRQUFRQyxNQUFRLFlBSXBCcEgsS0FBS3NILE9BN0RSLENBK0RIbkcsRUFBSVUsS0FBSyIsImZpbGUiOiJzaXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsidmFyIHJhZiA9IHJlcXVpcmUoJ3JhZmwnKVxuXG5mdW5jdGlvbiBzY3JvbGwgKHByb3AsIGVsZW1lbnQsIHRvLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICB2YXIgc3RhcnQgPSArbmV3IERhdGVcbiAgdmFyIGZyb20gPSBlbGVtZW50W3Byb3BdXG4gIHZhciBjYW5jZWxsZWQgPSBmYWxzZVxuXG4gIHZhciBlYXNlID0gaW5PdXRTaW5lXG4gIHZhciBkdXJhdGlvbiA9IDM1MFxuXG4gIGlmICh0eXBlb2Ygb3B0aW9ucyA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIGNhbGxiYWNrID0gb3B0aW9uc1xuICB9XG4gIGVsc2Uge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9XG4gICAgZWFzZSA9IG9wdGlvbnMuZWFzZSB8fCBlYXNlXG4gICAgZHVyYXRpb24gPSBvcHRpb25zLmR1cmF0aW9uIHx8IGR1cmF0aW9uXG4gICAgY2FsbGJhY2sgPSBjYWxsYmFjayB8fCBmdW5jdGlvbiAoKSB7fVxuICB9XG5cbiAgaWYgKGZyb20gPT09IHRvKSB7XG4gICAgcmV0dXJuIGNhbGxiYWNrKFxuICAgICAgbmV3IEVycm9yKCdFbGVtZW50IGFscmVhZHkgYXQgdGFyZ2V0IHNjcm9sbCBwb3NpdGlvbicpLFxuICAgICAgZWxlbWVudFtwcm9wXVxuICAgIClcbiAgfVxuXG4gIGZ1bmN0aW9uIGNhbmNlbCAoKSB7XG4gICAgY2FuY2VsbGVkID0gdHJ1ZVxuICB9XG5cbiAgZnVuY3Rpb24gYW5pbWF0ZSAodGltZXN0YW1wKSB7XG4gICAgaWYgKGNhbmNlbGxlZCkge1xuICAgICAgcmV0dXJuIGNhbGxiYWNrKFxuICAgICAgICBuZXcgRXJyb3IoJ1Njcm9sbCBjYW5jZWxsZWQnKSxcbiAgICAgICAgZWxlbWVudFtwcm9wXVxuICAgICAgKVxuICAgIH1cblxuICAgIHZhciBub3cgPSArbmV3IERhdGVcbiAgICB2YXIgdGltZSA9IE1hdGgubWluKDEsICgobm93IC0gc3RhcnQpIC8gZHVyYXRpb24pKVxuICAgIHZhciBlYXNlZCA9IGVhc2UodGltZSlcblxuICAgIGVsZW1lbnRbcHJvcF0gPSAoZWFzZWQgKiAodG8gLSBmcm9tKSkgKyBmcm9tXG5cbiAgICB0aW1lIDwgMSA/IHJhZihhbmltYXRlKSA6IHJhZihmdW5jdGlvbiAoKSB7XG4gICAgICBjYWxsYmFjayhudWxsLCBlbGVtZW50W3Byb3BdKVxuICAgIH0pXG4gIH1cblxuICByYWYoYW5pbWF0ZSlcblxuICByZXR1cm4gY2FuY2VsXG59XG5cbmZ1bmN0aW9uIGluT3V0U2luZSAobikge1xuICByZXR1cm4gLjUgKiAoMSAtIE1hdGguY29zKE1hdGguUEkgKiBuKSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHRvcDogZnVuY3Rpb24gKGVsZW1lbnQsIHRvLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBzY3JvbGwoJ3Njcm9sbFRvcCcsIGVsZW1lbnQsIHRvLCBvcHRpb25zLCBjYWxsYmFjaylcbiAgfSxcbiAgbGVmdDogZnVuY3Rpb24gKGVsZW1lbnQsIHRvLCBvcHRpb25zLCBjYWxsYmFjaykge1xuICAgIHJldHVybiBzY3JvbGwoJ3Njcm9sbExlZnQnLCBlbGVtZW50LCB0bywgb3B0aW9ucywgY2FsbGJhY2spXG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0ICh1cmkpID0+IHtcbiAgY29uc3QgeGhyID0gbmV3IFhNTEh0dHBSZXF1ZXN0KClcbiAgbGV0IGVycm9ySGFuZGxlciA9ICgpID0+IHt9XG5cbiAgeGhyLm9wZW4oJ0dFVCcsIHVyaSwgdHJ1ZSlcblxuICByZXR1cm4ge1xuICAgIHRoZW46IChjYikgPT4ge1xuICAgICAgeGhyLm9ubG9hZCA9IGZ1bmN0aW9uKCkge1xuICAgICAgICBsZXQgdmFsaWRSZXNwb25zZSA9IHRoaXMuc3RhdHVzIDwgMjAwIHx8IHRoaXMuc3RhdHVzID49IDQwMFxuICAgICAgICBpZiAodmFsaWRSZXNwb25zZSAmJiBlcnJvckhhbmRsZXIpIGVycm9ySGFuZGxlcih0aGlzKVxuICAgICAgICBjYih0aGlzLnJlc3BvbnNlKVxuICAgICAgfVxuXG4gICAgICB4aHIub25lcnJvciA9IGVycm9ySGFuZGxlclxuICAgICAgeGhyLnNlbmQoKVxuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBjYXRjaDogKGhhbmRsZXIpID0+IHsgZXJyb3JIYW5kbGVyID0gaGFuZGxlciB9XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iLCJpbXBvcnQgZmV0Y2ggZnJvbSAnLi9mZXRjaCdcblxuZmV0Y2goJy9hc3NldHMvaWNvbnMvc3ByaXRlLnN2ZycpXG4gIC50aGVuKHNwcml0ZSA9PiB7XG4gICAgbGV0IGZpZ3VyZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2ZpZ3VyZScpXG4gICAgZmlndXJlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSdcbiAgICBmaWd1cmUuaW5uZXJIVE1MID0gc3ByaXRlXG4gICAgZG9jdW1lbnQuYm9keS5pbnNlcnRCZWZvcmUoZmlndXJlLCBkb2N1bWVudC5ib2R5LmNoaWxkcmVuWzBdKVxuICB9KVxuICAuY2F0Y2goZXJyID0+IHtcbiAgICBjb25zb2xlLndhcm4oJ0ljb24gc3ByaXRlc2hlZXQgY291bGQgbm90IGJlIGxvYWRlZFxcbicsIGVycilcbiAgfSlcbiIsImNvbnN0IHNjcm9sbEJveCA9IGRvY3VtZW50LnNjcm9sbGluZ0VsZW1lbnQgfHwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgc2Nyb2xsQm94LFxuXG4gIGZpbmQ6IChxdWVyeSwgc2NvcGUgPSBkb2N1bWVudCkgPT5cbiAgICBzY29wZS5xdWVyeVNlbGVjdG9yKHF1ZXJ5KSxcblxuICBmaW5kQWxsOiAocXVlcnksIHNjb3BlID0gZG9jdW1lbnQpID0+XG4gICAgWy4uLnNjb3BlLnF1ZXJ5U2VsZWN0b3JBbGwocXVlcnkpXSxcblxuICBnZXQgc2Nyb2xsVG9wKCkge1xuICAgIHJldHVybiBzY3JvbGxCb3guc2Nyb2xsVG9wXG4gIH1cbn1cbiIsImltcG9ydCBkb20gZnJvbSAnLi9kb20taGVscGVycydcblxuY29uc3QgdGltZXIgPSBkb20uZmluZCgnW2RhdGEtdGltZXJdJylcbmxldCBpbmRleCA9IDBcblxuY29uc3Qgc2xpZGVzID0gZG9tLmZpbmRBbGwoJ1tkYXRhLXNsaWRlXScpXG4gIC5tYXAoKG5vZGUsIGkpID0+IHtcbiAgICBpZiAoIWkpIG5vZGUuY2xhc3NMaXN0LmFkZCgnYWN0aXZlLXNsaWRlJylcbiAgICBlbHNlIG5vZGUuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlLXNsaWRlJylcbiAgICByZXR1cm4gbm9kZVxuICB9KVxuXG5jb25zdCBzd2FwU2xpZGVzID0gKCkgPT4ge1xuICBzbGlkZXNbaW5kZXhdLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZS1zbGlkZScpXG4gIGluZGV4ID0gKGluZGV4ICsgMSA9PT0gc2xpZGVzLmxlbmd0aCkgPyAwIDogaW5kZXggKyAxXG4gIHNsaWRlc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlLXNsaWRlJylcbiAgdGltZXIuY2xhc3NMaXN0LmFkZCgncnVubmluZycpXG59XG5cbnRpbWVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCAoKSA9PiB7XG4gIHRpbWVyLmNsYXNzTGlzdC5yZW1vdmUoJ3J1bm5pbmcnKVxuICBzZXRUaW1lb3V0KHN3YXBTbGlkZXMsIDEyNSlcbn0pXG5cbnNldFRpbWVvdXQoKCkgPT4ge1xuICB0aW1lci5jbGFzc0xpc3QuYWRkKCdydW5uaW5nJylcbn0sIDI1MClcbiIsInZhciB3aW47XG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIil7XG4gICAgd2luID0gc2VsZjtcbn0gZWxzZSB7XG4gICAgd2luID0ge307XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2luO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJ2dsb2JhbCcpXG5cbi8qKlxuICogYHJlcXVlc3RBbmltYXRpb25GcmFtZSgpYFxuICovXG5cbnZhciByZXF1ZXN0ID0gZ2xvYmFsLnJlcXVlc3RBbmltYXRpb25GcmFtZVxuICB8fCBnbG9iYWwud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gIHx8IGdsb2JhbC5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgfHwgZmFsbGJhY2tcblxudmFyIHByZXYgPSArbmV3IERhdGVcbmZ1bmN0aW9uIGZhbGxiYWNrIChmbikge1xuICB2YXIgY3VyciA9ICtuZXcgRGF0ZVxuICB2YXIgbXMgPSBNYXRoLm1heCgwLCAxNiAtIChjdXJyIC0gcHJldikpXG4gIHZhciByZXEgPSBzZXRUaW1lb3V0KGZuLCBtcylcbiAgcmV0dXJuIHByZXYgPSBjdXJyLCByZXFcbn1cblxuLyoqXG4gKiBgY2FuY2VsQW5pbWF0aW9uRnJhbWUoKWBcbiAqL1xuXG52YXIgY2FuY2VsID0gZ2xvYmFsLmNhbmNlbEFuaW1hdGlvbkZyYW1lXG4gIHx8IGdsb2JhbC53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZVxuICB8fCBnbG9iYWwubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWVcbiAgfHwgY2xlYXJUaW1lb3V0XG5cbmlmIChGdW5jdGlvbi5wcm90b3R5cGUuYmluZCkge1xuICByZXF1ZXN0ID0gcmVxdWVzdC5iaW5kKGdsb2JhbClcbiAgY2FuY2VsID0gY2FuY2VsLmJpbmQoZ2xvYmFsKVxufVxuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1ZXN0XG5leHBvcnRzLmNhbmNlbCA9IGNhbmNlbFxuIiwiaW1wb3J0IHNjcm9sbCBmcm9tICdzY3JvbGwnXG5pbXBvcnQgZG9tIGZyb20gJy4vZG9tLWhlbHBlcnMnXG5cbmNvbnN0IG5hdkhlaWdodCA9ICgpID0+XG4gIGRvbS5maW5kKCdbZGF0YS1oZWFkZXJdJykuY2xpZW50SGVpZ2h0XG5cbmNvbnN0IHJlc29sdmVUYXJnZXQgPSAoaWQpID0+XG4gIGRvbS5zY3JvbGxUb3AgKyBkb20uZmluZChpZCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIC0gbmF2SGVpZ2h0KClcblxuY29uc3Qgc2Nyb2xsSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gIHNjcm9sbC50b3AoZG9tLnNjcm9sbEJveCwgcmVzb2x2ZVRhcmdldCh0aGlzLmdldEF0dHJpYnV0ZSgnaHJlZicpKSwgeyBkdXJhdGlvbjogNTAwIH0pXG59XG5cbmRvbS5maW5kQWxsKCdbZGF0YS1zY3JvbGwtdG9dJylcbiAgLmZvckVhY2gobm9kZSA9PiB7XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIHNjcm9sbEhhbmRsZXIpXG4gIH0pXG4iLCJpbXBvcnQgZG9tIGZyb20gJy4vZG9tLWhlbHBlcnMnXG5cbmNvbnN0IGhlYWRlciA9IGRvbS5maW5kKCdbZGF0YS1oZWFkZXJdJylcbmxldCBzY3JvbGwsIGJ1ZmZlciwgZG9ja2VkXG5cbmNvbnN0IHVwZGF0ZSA9ICgpID0+IHtcbiAgbGV0IGRvY2sgPSBzY3JvbGwgPiAxMCAmJiAhZG9ja2VkXG4gIGxldCB1bmRvY2sgPSBzY3JvbGwgPD0gMTAgJiYgZG9ja2VkXG5cbiAgaWYgKGRvY2sgfHwgdW5kb2NrKSBkb2NrZWQgPSBoZWFkZXIuY2xhc3NMaXN0LnRvZ2dsZSgnaGVhZGVyLS1kb2NrZWQnKVxuICBidWZmZXIgPSBmYWxzZVxufVxuXG5jb25zdCByZXF1ZXN0VXBkYXRlID0gKCkgPT4ge1xuICBpZiAoIWJ1ZmZlcikgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHVwZGF0ZSlcbiAgYnVmZmVyID0gdHJ1ZVxuICBzY3JvbGwgPSBkb20uc2Nyb2xsVG9wXG59XG5cbnJlcXVlc3RVcGRhdGUoKVxud2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Njcm9sbCcsIHJlcXVlc3RVcGRhdGUpXG4iLCJpbXBvcnQgZG9tIGZyb20gJy4vZG9tLWhlbHBlcnMnXG5cbmNvbnN0IGdldEZsaXBIYW5kbGVyID0gKG5vZGUpID0+XG4gICgpID0+IG5vZGUuY2xhc3NMaXN0LmFkZCgnY2FyZC0tZmxpcCcpXG5cbmNvbnN0IGdldFVuZmxpcEhhbmRsZXIgPSAobm9kZSkgPT5cbiAgKCkgPT4gbm9kZS5jbGFzc0xpc3QucmVtb3ZlKCdjYXJkLS1mbGlwJylcblxuY29uc3QgZ2V0U2hvcnRlc3RTaWRlID0gKFtmcm9udCwgYmFja10pID0+XG4gIChmcm9udC5jbGllbnRIZWlnaHQgPCBiYWNrLmNsaWVudEhlaWdodCkgPyBmcm9udCA6IGJhY2tcblxuZG9tLmZpbmRBbGwoJ1tkYXRhLWNhcmRdJylcbiAgLmZvckVhY2gobm9kZSA9PiB7XG4gICAgZ2V0U2hvcnRlc3RTaWRlKG5vZGUuY2hpbGRyZW4pXG4gICAgICAuc3R5bGUucG9zaXRpb24gPSAnYWJzb2x1dGUnXG5cbiAgICBkb20uZmluZEFsbCgnW2RhdGEtY2FyZC1mbGlwXScsIG5vZGUpXG4gICAgICAuZm9yRWFjaChmbGlwTm9kZSA9PiB7XG4gICAgICAgIGZsaXBOb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZ2V0RmxpcEhhbmRsZXIobm9kZSkpXG4gICAgICB9KVxuXG4gICAgZG9tLmZpbmRBbGwoJ1tkYXRhLWNhcmQtdW5mbGlwXScsIG5vZGUpXG4gICAgICAuZm9yRWFjaCh1bmZsaXBOb2RlID0+IHtcbiAgICAgICAgdW5mbGlwTm9kZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdldFVuZmxpcEhhbmRsZXIobm9kZSkpXG4gICAgICB9KVxuICB9KVxuIiwiaW1wb3J0IGZldGNoIGZyb20gJy4vZmV0Y2gnXG5cbmNvbnN0IG1hcE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJylcblxuY29uc3QgZ2V0U2NyaXB0VGFnID0gKGtleSkgPT4ge1xuICBsZXQgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0JylcbiAgdGFnLnNldEF0dHJpYnV0ZSgnYXN5bmMnLCAnJylcbiAgdGFnLnNldEF0dHJpYnV0ZSgnZGVmZXInLCAnJylcbiAgdGFnLnNldEF0dHJpYnV0ZSgnc3JjJywgYGh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9JHtrZXl9JmNhbGxiYWNrPWluaXRNYXBgKVxuICByZXR1cm4gdGFnXG59XG5cbmlmIChtYXBOb2RlKSB7XG4gIGZldGNoKCcvYXNzZXRzL2RhdGEvbWFwLWNvbmZpZy5qc29uJylcbiAgICAudGhlbihjb25maWcgPT4ge1xuICAgICAgbGV0IHsga2V5LCBvcHRpb25zLCBtYXJrZXI6IHBvc2l0aW9uIH0gPSBKU09OLnBhcnNlKGNvbmZpZylcblxuICAgICAgY29uc3QgaW5pdCA9IHtcbiAgICAgICAgbWFwOiAoKSA9PiBuZXcgZ29vZ2xlLm1hcHMuTWFwKG1hcE5vZGUsIG9wdGlvbnMpLFxuICAgICAgICBtYXJrZXI6IChtYXApID0+IG5ldyBnb29nbGUubWFwcy5NYXJrZXIoe1xuICAgICAgICAgIHBvc2l0aW9uLFxuICAgICAgICAgIG1hcCxcbiAgICAgICAgICBpY29uOiAnL2Fzc2V0cy9tZWRpYS9sb2dvL2xsYi1tYXAucG5nJ1xuICAgICAgICB9KVxuICAgICAgfVxuXG4gICAgICB3aW5kb3cuaW5pdE1hcCA9ICgpID0+IHtcbiAgICAgICAgaW5pdC5tYXJrZXIoaW5pdC5tYXAoKSlcbiAgICAgIH1cblxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChnZXRTY3JpcHRUYWcoa2V5KSlcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcbn1cbiIsImltcG9ydCBkb20gZnJvbSAnLi9kb20taGVscGVycydcblxuY29uc3QgZGF0ZSA9IG5ldyBEYXRlKClcblxuZG9tLmZpbmRBbGwoJ3RpbWVbZGF0YS15ZWFyXScpXG4gIC5mb3JFYWNoKG5vZGUgPT4ge1xuICAgIG5vZGUuaW5uZXJIVE1MICs9IGRhdGUuZ2V0RnVsbFllYXIoKVxuICB9KVxuIiwiaW1wb3J0IGRvbSBmcm9tICcuL2RvbS1oZWxwZXJzJ1xuXG5jb25zdCBoZWFkZXIgPSBkb20uZmluZCgnW2RhdGEtaGVhZGVyXScpXG5cbmRvbS5maW5kKCdbZGF0YS1idXJnZXJdJywgaGVhZGVyKVxuICAuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgaGVhZGVyLmNsYXNzTGlzdC50b2dnbGUoJ2hlYWRlci0tb3BlbicpXG4gICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QudG9nZ2xlKCdub3Njcm9sbCcpXG4gIH0pXG5cbmRvbS5maW5kQWxsKCdbZGF0YS1zY3JvbGwtdG9dJylcbiAgLmZvckVhY2gobm9kZSA9PiB7XG4gICAgbm9kZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGhlYWRlci5jbGFzc0xpc3QucmVtb3ZlKCdoZWFkZXItLW9wZW4nKVxuICAgICAgZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QucmVtb3ZlKCdub3Njcm9sbCcpXG4gICAgfSlcbiAgfSlcbiIsImltcG9ydCBkb20gZnJvbSAnLi9kb20taGVscGVycydcblxudm9pZCAoKGZvcm0pID0+IHtcbiAgaWYgKCFmb3JtKSByZXR1cm47XG5cbiAgZG9tLmZpbmRBbGwoJ2lucHV0LCB0ZXh0YXJlYScsIGZvcm0pXG4gICAgLmZvckVhY2goaW5wdXQgPT4ge1xuICAgICAgaW5wdXQuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCAoKSA9PiB7XG4gICAgICAgIGlucHV0LmRhdGFzZXQuc3RhdGUgPSAnb2snXG4gICAgICB9KVxuICAgIH0pXG5cbiAgZm9ybS5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCAoZSkgPT4ge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuXG4gICAgY29uc3QgaHR0cCA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpXG4gICAgY29uc3QgZm9ybURhdGEgPSBuZXcgRm9ybURhdGEoKVxuXG4gICAgbGV0IHZhbGlkID0gdHJ1ZVxuICAgIGxldCBzdWJtaXR0ZWQgPSBmYWxzZVxuICAgIGxldCBmaWxlSW5wdXQgPSBkb20uZmluZCgnW2RhdGEtYXR0YWNobWVudF0nLCBmb3JtKVxuXG4gICAgbGV0IGZpZWxkcyA9IHtcbiAgICAgIG5hbWU6IGRvbS5maW5kKCdbbmFtZT1cIm5hbWVcIl0nLCBmb3JtKSxcbiAgICAgIHN1cm5hbWU6IGRvbS5maW5kKCdbbmFtZT1cInN1cm5hbWVcIl0nLCBmb3JtKSxcbiAgICAgIGVtYWlsOiBkb20uZmluZCgnW25hbWU9XCJlbWFpbFwiXScsIGZvcm0pLFxuICAgICAgbWVzc2FnZTogZG9tLmZpbmQoJ1tuYW1lPVwibWVzc2FnZVwiXScsIGZvcm0pXG4gICAgfVxuXG4gICAgT2JqZWN0LnZhbHVlcyhmaWVsZHMpXG4gICAgICAuZm9yRWFjaChmaWVsZCA9PiB7XG4gICAgICAgIGlmICghZmllbGQudmFsdWUgfHwgIWZpZWxkLnZhbHVlLmxlbmd0aCkge1xuICAgICAgICAgIGZpZWxkLmRhdGFzZXQuc3RhdGUgPSAnZXJyb3InXG4gICAgICAgICAgdmFsaWQgPSBmYWxzZVxuICAgICAgICB9IGVsc2UgaWYgKGZpZWxkLm5hbWUgPT09ICdlbWFpbCcgJiYgIS8uK0AuK1xcLi4rLy50ZXN0KGZpZWxkLnZhbHVlKSkge1xuICAgICAgICAgIGZpZWxkLmRhdGFzZXQuc3RhdGUgPSAnZXJyb3InXG4gICAgICAgICAgdmFsaWQgPSBmYWxzZVxuICAgICAgICB9XG4gICAgICB9KVxuXG4gICAgaWYgKHN1Ym1pdHRlZCB8fCAhdmFsaWQpIHJldHVybjtcbiAgICBzdWJtaXR0ZWQgPSB0cnVlXG5cbiAgICBodHRwLm9wZW4oJ1BPU1QnLCAnaHR0cDovL3VkeS5pby9hcGkvbWFpbC8nLCB0cnVlKVxuXG4gICAgZm9ybS5kYXRhc2V0LnN0YXRlID0gJ3NlbmRpbmcnXG4gICAgZm9ybURhdGEuYXBwZW5kKCdzaXRlbmFtZScsICdsbGItY3BhJylcbiAgICBmb3JtRGF0YS5hcHBlbmQoJ2VtYWlsJywgZmllbGRzLmVtYWlsLnZhbHVlKVxuICAgIGZvcm1EYXRhLmFwcGVuZCgnbWFpbHRvJywgJ3JlY2VwdGlvbkBsbGJjcGEuY2EnKVxuICAgIGZvcm1EYXRhLmFwcGVuZCgnbWVzc2FnZScsIGZpZWxkcy5tZXNzYWdlLnZhbHVlKVxuICAgIGZvcm1EYXRhLmFwcGVuZCgnc3ViamVjdCcsICdOb3V2ZWF1IGNvbnRhY3QnKVxuICAgIGZvcm1EYXRhLmFwcGVuZCgnbmFtZScsIGAke2ZpZWxkcy5uYW1lLnZhbHVlfSAke2ZpZWxkcy5zdXJuYW1lLnZhbHVlfWApXG5cbiAgICBpZiAoZmlsZUlucHV0KSBmb3JtRGF0YS5hcHBlbmQoJ2F0dGFjaG1lbnQnLCBmaWxlSW5wdXQuZmlsZXNbMF0pXG5cbiAgICBodHRwLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCBmdW5jdGlvbigpIHtcbiAgICAgIGlmICh0aGlzLnN0YXR1cyA+PSAyMDAgJiYgdGhpcy5zdGF0dXMgPCA0MDApIHtcbiAgICAgICAgZm9ybS5kYXRhc2V0LnN0YXRlID0gJ3N1Y2Nlc3MnXG4gICAgICB9IGVsc2Uge1xuICAgICAgICBmb3JtLmRhdGFzZXQuc3RhdGUgPSAnZXJyb3InXG4gICAgICB9XG4gICAgfSlcblxuICAgIGh0dHAuc2VuZChmb3JtRGF0YSlcbiAgfSlcbn0pKGRvbS5maW5kKCdbZGF0YS1jb250YWN0LWZvcm1dJykpXG4iXX0=
