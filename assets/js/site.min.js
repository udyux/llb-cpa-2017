!function(){"use strict";function n(n,e,o,i,r){function a(t){if(s)return r(new Error("Scroll cancelled"),e[n]);var i=+new Date,m=Math.min(1,(i-c)/f),p=d(m);e[n]=p*(o-u)+u,l(m<1?a:function(){r(null,e[n])})}var c=+new Date,u=e[n],s=!1,d=t,f=350;return"function"==typeof i?r=i:(d=(i=i||{}).ease||d,f=i.duration||f,r=r||function(){}),u===o?r(new Error("Element already at target scroll position"),e[n]):(l(a),function(){s=!0})}function t(n){return.5*(1-Math.cos(Math.PI*n))}var e=function(n){var t=new XMLHttpRequest,e=function(){};return t.open("GET",n,!0),{then:function(n){return t.onload=function(){(this.status<200||this.status>=400)&&e&&e(this),n(this.response)},t.onerror=e,t.send(),{catch:function(n){e=n}}}}};e("/assets/icons/sprite.svg").then(function(n){var t=document.createElement("figure");t.style.display="none",t.innerHTML=n,document.body.insertBefore(t,document.body.children[0])}).catch(function(n){console.warn("Icon spritesheet could not be loaded\n",n)});var o=function(n){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(n)},i=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return[].concat(function(n){if(Array.isArray(n)){for(var t=0,e=Array(n.length);t<n.length;t++)e[t]=n[t];return e}return Array.from(n)}(t.querySelectorAll(n)))},r=o("[data-timer]"),a=0,c=i("[data-slide]").map(function(n,t){return t?n.classList.remove("active-slide"):n.classList.add("active-slide"),n}),u=function(){c[a].classList.remove("active-slide"),a=a+1===c.length?0:a+1,c[a].classList.add("active-slide"),r.classList.add("running")};r.addEventListener("transitionend",function(){r.classList.remove("running"),setTimeout(u,125)}),setTimeout(function(){r.classList.add("running")},250);var s="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},d="undefined"!=typeof window?window:void 0!==s?s:"undefined"!=typeof self?self:{},l=function(n,t){return t={exports:{}},n(t,t.exports),t.exports}(function(n,t){var e=d.requestAnimationFrame||d.webkitRequestAnimationFrame||d.mozRequestAnimationFrame||function(n){var t=+new Date,e=Math.max(0,16-(t-o)),i=setTimeout(n,e);return o=t,i},o=+new Date,i=d.cancelAnimationFrame||d.webkitCancelAnimationFrame||d.mozCancelAnimationFrame||clearTimeout;Function.prototype.bind&&(e=e.bind(d),i=i.bind(d)),(n.exports=e).cancel=i}),f=function(t,e,o,i){return n("scrollTop",t,e,o,i)},m=function(n){return document.documentElement.scrollTop+o(n).getBoundingClientRect().top-o("[data-header]").clientHeight},p=function(n){n.preventDefault(),f(document.documentElement,m(this.getAttribute("href")),{duration:500})};i("[data-scroll-to]").forEach(function(n){n.addEventListener("click",p)});var v=document.documentElement,h=o("[data-header]"),g=void 0,w=void 0,y=void 0,E=function(){(g>5&&!y||g<=5&&y)&&(y=h.classList.toggle("header--docked")),w=!1};window.addEventListener("scroll",function(){w||requestAnimationFrame(E),w=!0,g=v.scrollTop});i("[data-card]").forEach(function(n){i("[data-card-flip]",n).forEach(function(t){t.addEventListener("click",function(n){return function(){return n.classList.add("card--flip")}}(n))}),i("[data-card-unflip]",n).forEach(function(t){t.addEventListener("click",function(n){return function(){return n.classList.remove("card--flip")}}(n))})});var L=document.getElementById("map");L&&e("/assets/data/map-config.json").then(function(n){var t=JSON.parse(n),e=t.key,o=t.options,i=t.marker,r=function(){return new google.maps.Map(L,o)},a=function(n){return new google.maps.Marker({position:i,map:n})};window.initMap=function(){a(r())},document.body.appendChild(function(n){var t=document.createElement("script");return t.setAttribute("async",""),t.setAttribute("defer",""),t.setAttribute("src","https://maps.googleapis.com/maps/api/js?key="+n+"&callback=initMap"),t}(e))}).catch(function(n){return console.log(n)})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9zY3JvbGwvaW5kZXguanMiLCJzY3JpcHRzL21vZHVsZXMvZmV0Y2guanMiLCJzY3JpcHRzL21vZHVsZXMvaWNvbi1zcHJpdGUuanMiLCJzY3JpcHRzL21vZHVsZXMvZG9tLWhlbHBlcnMuanMiLCJzY3JpcHRzL21vZHVsZXMvc2xpZGVyLmpzIiwibm9kZV9tb2R1bGVzL2dsb2JhbC93aW5kb3cuanMiLCJub2RlX21vZHVsZXMvcmFmbC9pbmRleC5qcyIsInNjcmlwdHMvbW9kdWxlcy9zY3JvbGwtdG8uanMiLCJzY3JpcHRzL21vZHVsZXMvZG9jay1oZWFkZXIuanMiLCJzY3JpcHRzL21vZHVsZXMvY2FyZC1mbGlwLmpzIiwic2NyaXB0cy9tb2R1bGVzL2dvb2dsZS1tYXAuanMiXSwibmFtZXMiOlsic2Nyb2xsIiwicHJvcCIsImVsZW1lbnQiLCJ0byIsIm9wdGlvbnMiLCJjYWxsYmFjayIsImFuaW1hdGUiLCJ0aW1lc3RhbXAiLCJjYW5jZWxsZWQiLCJFcnJvciIsIm5vdyIsIkRhdGUiLCJ0aW1lIiwiTWF0aCIsIm1pbiIsInN0YXJ0IiwiZHVyYXRpb24iLCJlYXNlZCIsImVhc2UiLCJmcm9tIiwicmFmIiwiaW5PdXRTaW5lIiwibiIsImNvcyIsIlBJIiwiZmV0Y2giLCJ1cmkiLCJ4aHIiLCJYTUxIdHRwUmVxdWVzdCIsImVycm9ySGFuZGxlciIsIm9wZW4iLCJjYiIsIm9ubG9hZCIsInRoaXMiLCJzdGF0dXMiLCJyZXNwb25zZSIsIm9uZXJyb3IiLCJzZW5kIiwiaGFuZGxlciIsInRoZW4iLCJzcHJpdGUiLCJmaWd1cmUiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzdHlsZSIsImRpc3BsYXkiLCJpbm5lckhUTUwiLCJib2R5IiwiaW5zZXJ0QmVmb3JlIiwiY2hpbGRyZW4iLCJjYXRjaCIsImVyciIsIndhcm4iLCJkb20iLCJxdWVyeSIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInF1ZXJ5U2VsZWN0b3IiLCJzY29wZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJ0aW1lciIsImluZGV4Iiwic2xpZGVzIiwibWFwIiwibm9kZSIsImkiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJzd2FwU2xpZGVzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInNldFRpbWVvdXQiLCJ3aW5kb3dfMSIsIndpbmRvdyIsImdsb2JhbCIsInNlbGYiLCJyZXF1ZXN0IiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwid2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibW96UmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiZm4iLCJjdXJyIiwibXMiLCJtYXgiLCJwcmV2IiwicmVxIiwiY2FuY2VsIiwiY2FuY2VsQW5pbWF0aW9uRnJhbWUiLCJ3ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZSIsIm1vekNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiY2xlYXJUaW1lb3V0IiwiRnVuY3Rpb24iLCJwcm90b3R5cGUiLCJiaW5kIiwibW9kdWxlIiwic2Nyb2xsXzEiLCJyZXNvbHZlVGFyZ2V0IiwiaWQiLCJkb2N1bWVudEVsZW1lbnQiLCJzY3JvbGxUb3AiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJjbGllbnRIZWlnaHQiLCJzY3JvbGxIYW5kbGVyIiwiZSIsInByZXZlbnREZWZhdWx0IiwiZ2V0QXR0cmlidXRlIiwiZm9yRWFjaCIsInBhZ2UiLCJoZWFkZXIiLCJidWZmZXIiLCJkb2NrZWQiLCJ1cGRhdGUiLCJ0b2dnbGUiLCJmbGlwTm9kZSIsImdldEZsaXBIYW5kbGVyIiwidW5mbGlwTm9kZSIsImdldFVuZmxpcEhhbmRsZXIiLCJtYXBOb2RlIiwiZ2V0RWxlbWVudEJ5SWQiLCJjb25maWciLCJKU09OIiwicGFyc2UiLCJrZXkiLCJfSlNPTiRwYXJzZSIsInBvc2l0aW9uIiwibWFya2VyIiwiaW5pdCIsImdvb2dsZSIsIm1hcHMiLCJNYXAiLCJNYXJrZXIiLCJpbml0TWFwIiwiYXBwZW5kQ2hpbGQiLCJ0YWciLCJzZXRBdHRyaWJ1dGUi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QUt4SCxFQURHeUgsRUFDSHpILFFBQWlCMEgsRUFEZEQsRUFDTUUsT0FFZEMsRUFDQyxrQkFBTSxJQUFJQyxPQUFPQyxLQUFLQyxJQUFJWixFQUFTbkgsSUFEcEM0SCxFQUVJLFNBQUNoRSxVQUFRLElBQUlpRSxPQUFPQyxLQUFLRSxRQUFTTixTQUFBQSxFQUFVOUQsSUFBQUEsWUFHL0NxRSxRQUFVLGFBQ0hMLGVBR0xqRixLQUFLdUYsWUF0QkMsU0FBQ1YsT0FDaEJXLEVBQU03RixTQUFTQyxjQUFjLG1CQUM3QjZGLGFBQWEsUUFBUyxNQUN0QkEsYUFBYSxRQUFTLE1BQ3RCQSxhQUFhLE1BQWpCLCtDQUF1RVosRUFBdkUscUJBQ09XLEVBaUJ1QkUsQ0FBYWIsTUFFeEMxRSxNQUFNLFNBQUFDLFVBQU91RixRQUFRQyxJQUFJeEYiLCJmaWxlIjoic2l0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByYWYgPSByZXF1aXJlKCdyYWZsJylcblxuZnVuY3Rpb24gc2Nyb2xsIChwcm9wLCBlbGVtZW50LCB0bywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgdmFyIHN0YXJ0ID0gK25ldyBEYXRlXG4gIHZhciBmcm9tID0gZWxlbWVudFtwcm9wXVxuICB2YXIgY2FuY2VsbGVkID0gZmFsc2VcblxuICB2YXIgZWFzZSA9IGluT3V0U2luZVxuICB2YXIgZHVyYXRpb24gPSAzNTBcblxuICBpZiAodHlwZW9mIG9wdGlvbnMgPT09ICdmdW5jdGlvbicpIHtcbiAgICBjYWxsYmFjayA9IG9wdGlvbnNcbiAgfVxuICBlbHNlIHtcbiAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fVxuICAgIGVhc2UgPSBvcHRpb25zLmVhc2UgfHwgZWFzZVxuICAgIGR1cmF0aW9uID0gb3B0aW9ucy5kdXJhdGlvbiB8fCBkdXJhdGlvblxuICAgIGNhbGxiYWNrID0gY2FsbGJhY2sgfHwgZnVuY3Rpb24gKCkge31cbiAgfVxuXG4gIGlmIChmcm9tID09PSB0bykge1xuICAgIHJldHVybiBjYWxsYmFjayhcbiAgICAgIG5ldyBFcnJvcignRWxlbWVudCBhbHJlYWR5IGF0IHRhcmdldCBzY3JvbGwgcG9zaXRpb24nKSxcbiAgICAgIGVsZW1lbnRbcHJvcF1cbiAgICApXG4gIH1cblxuICBmdW5jdGlvbiBjYW5jZWwgKCkge1xuICAgIGNhbmNlbGxlZCA9IHRydWVcbiAgfVxuXG4gIGZ1bmN0aW9uIGFuaW1hdGUgKHRpbWVzdGFtcCkge1xuICAgIGlmIChjYW5jZWxsZWQpIHtcbiAgICAgIHJldHVybiBjYWxsYmFjayhcbiAgICAgICAgbmV3IEVycm9yKCdTY3JvbGwgY2FuY2VsbGVkJyksXG4gICAgICAgIGVsZW1lbnRbcHJvcF1cbiAgICAgIClcbiAgICB9XG5cbiAgICB2YXIgbm93ID0gK25ldyBEYXRlXG4gICAgdmFyIHRpbWUgPSBNYXRoLm1pbigxLCAoKG5vdyAtIHN0YXJ0KSAvIGR1cmF0aW9uKSlcbiAgICB2YXIgZWFzZWQgPSBlYXNlKHRpbWUpXG5cbiAgICBlbGVtZW50W3Byb3BdID0gKGVhc2VkICogKHRvIC0gZnJvbSkpICsgZnJvbVxuXG4gICAgdGltZSA8IDEgPyByYWYoYW5pbWF0ZSkgOiByYWYoZnVuY3Rpb24gKCkge1xuICAgICAgY2FsbGJhY2sobnVsbCwgZWxlbWVudFtwcm9wXSlcbiAgICB9KVxuICB9XG5cbiAgcmFmKGFuaW1hdGUpXG5cbiAgcmV0dXJuIGNhbmNlbFxufVxuXG5mdW5jdGlvbiBpbk91dFNpbmUgKG4pIHtcbiAgcmV0dXJuIC41ICogKDEgLSBNYXRoLmNvcyhNYXRoLlBJICogbikpXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICB0b3A6IGZ1bmN0aW9uIChlbGVtZW50LCB0bywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gc2Nyb2xsKCdzY3JvbGxUb3AnLCBlbGVtZW50LCB0bywgb3B0aW9ucywgY2FsbGJhY2spXG4gIH0sXG4gIGxlZnQ6IGZ1bmN0aW9uIChlbGVtZW50LCB0bywgb3B0aW9ucywgY2FsbGJhY2spIHtcbiAgICByZXR1cm4gc2Nyb2xsKCdzY3JvbGxMZWZ0JywgZWxlbWVudCwgdG8sIG9wdGlvbnMsIGNhbGxiYWNrKVxuICB9XG59XG4iLCJleHBvcnQgZGVmYXVsdCAodXJpKSA9PiB7XG4gIGNvbnN0IHhociA9IG5ldyBYTUxIdHRwUmVxdWVzdCgpXG4gIGxldCBlcnJvckhhbmRsZXIgPSAoKSA9PiB7fVxuXG4gIHhoci5vcGVuKCdHRVQnLCB1cmksIHRydWUpXG5cbiAgcmV0dXJuIHtcbiAgICB0aGVuOiAoY2IpID0+IHtcbiAgICAgIHhoci5vbmxvYWQgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgbGV0IHZhbGlkUmVzcG9uc2UgPSB0aGlzLnN0YXR1cyA8IDIwMCB8fCB0aGlzLnN0YXR1cyA+PSA0MDBcbiAgICAgICAgaWYgKHZhbGlkUmVzcG9uc2UgJiYgZXJyb3JIYW5kbGVyKSBlcnJvckhhbmRsZXIodGhpcylcbiAgICAgICAgY2IodGhpcy5yZXNwb25zZSlcbiAgICAgIH1cblxuICAgICAgeGhyLm9uZXJyb3IgPSBlcnJvckhhbmRsZXJcbiAgICAgIHhoci5zZW5kKClcblxuICAgICAgcmV0dXJuIHtcbiAgICAgICAgY2F0Y2g6IChoYW5kbGVyKSA9PiB7IGVycm9ySGFuZGxlciA9IGhhbmRsZXIgfVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIiwiaW1wb3J0IGZldGNoIGZyb20gJy4vZmV0Y2gnXG5cbmZldGNoKCcvYXNzZXRzL2ljb25zL3Nwcml0ZS5zdmcnKVxuICAudGhlbihzcHJpdGUgPT4ge1xuICAgIGxldCBmaWd1cmUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmaWd1cmUnKVxuICAgIGZpZ3VyZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnXG4gICAgZmlndXJlLmlubmVySFRNTCA9IHNwcml0ZVxuICAgIGRvY3VtZW50LmJvZHkuaW5zZXJ0QmVmb3JlKGZpZ3VyZSwgZG9jdW1lbnQuYm9keS5jaGlsZHJlblswXSlcbiAgfSlcbiAgLmNhdGNoKGVyciA9PiB7XG4gICAgY29uc29sZS53YXJuKCdJY29uIHNwcml0ZXNoZWV0IGNvdWxkIG5vdCBiZSBsb2FkZWRcXG4nLCBlcnIpXG4gIH0pXG4iLCJjb25zdCBmaW5kID0gKHF1ZXJ5LCBzY29wZSA9IGRvY3VtZW50KSA9PlxuICBzY29wZS5xdWVyeVNlbGVjdG9yKHF1ZXJ5KVxuXG5jb25zdCBmaW5kQWxsID0gKHF1ZXJ5LCBzY29wZSA9IGRvY3VtZW50KSA9PlxuICBbLi4uc2NvcGUucXVlcnlTZWxlY3RvckFsbChxdWVyeSldXG5cblxuZXhwb3J0IGRlZmF1bHQgeyBmaW5kLCBmaW5kQWxsIH1cbiIsImltcG9ydCBkb20gZnJvbSAnLi9kb20taGVscGVycydcblxuY29uc3QgdGltZXIgPSBkb20uZmluZCgnW2RhdGEtdGltZXJdJylcbmxldCBpbmRleCA9IDBcblxuY29uc3Qgc2xpZGVzID0gZG9tLmZpbmRBbGwoJ1tkYXRhLXNsaWRlXScpXG4gIC5tYXAoKG5vZGUsIGkpID0+IHtcbiAgICBpZiAoIWkpIG5vZGUuY2xhc3NMaXN0LmFkZCgnYWN0aXZlLXNsaWRlJylcbiAgICBlbHNlIG5vZGUuY2xhc3NMaXN0LnJlbW92ZSgnYWN0aXZlLXNsaWRlJylcbiAgICByZXR1cm4gbm9kZVxuICB9KVxuXG5jb25zdCBzd2FwU2xpZGVzID0gKCkgPT4ge1xuICBzbGlkZXNbaW5kZXhdLmNsYXNzTGlzdC5yZW1vdmUoJ2FjdGl2ZS1zbGlkZScpXG4gIGluZGV4ID0gKGluZGV4ICsgMSA9PT0gc2xpZGVzLmxlbmd0aCkgPyAwIDogaW5kZXggKyAxXG4gIHNsaWRlc1tpbmRleF0uY2xhc3NMaXN0LmFkZCgnYWN0aXZlLXNsaWRlJylcbiAgdGltZXIuY2xhc3NMaXN0LmFkZCgncnVubmluZycpXG59XG5cbnRpbWVyLmFkZEV2ZW50TGlzdGVuZXIoJ3RyYW5zaXRpb25lbmQnLCAoKSA9PiB7XG4gIHRpbWVyLmNsYXNzTGlzdC5yZW1vdmUoJ3J1bm5pbmcnKVxuICBzZXRUaW1lb3V0KHN3YXBTbGlkZXMsIDEyNSlcbn0pXG5cbnNldFRpbWVvdXQoKCkgPT4ge1xuICB0aW1lci5jbGFzc0xpc3QuYWRkKCdydW5uaW5nJylcbn0sIDI1MClcbiIsInZhciB3aW47XG5cbmlmICh0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luID0gd2luZG93O1xufSBlbHNlIGlmICh0eXBlb2YgZ2xvYmFsICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgd2luID0gZ2xvYmFsO1xufSBlbHNlIGlmICh0eXBlb2Ygc2VsZiAhPT0gXCJ1bmRlZmluZWRcIil7XG4gICAgd2luID0gc2VsZjtcbn0gZWxzZSB7XG4gICAgd2luID0ge307XG59XG5cbm1vZHVsZS5leHBvcnRzID0gd2luO1xuIiwidmFyIGdsb2JhbCA9IHJlcXVpcmUoJ2dsb2JhbCcpXG5cbi8qKlxuICogYHJlcXVlc3RBbmltYXRpb25GcmFtZSgpYFxuICovXG5cbnZhciByZXF1ZXN0ID0gZ2xvYmFsLnJlcXVlc3RBbmltYXRpb25GcmFtZVxuICB8fCBnbG9iYWwud2Via2l0UmVxdWVzdEFuaW1hdGlvbkZyYW1lXG4gIHx8IGdsb2JhbC5tb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWVcbiAgfHwgZmFsbGJhY2tcblxudmFyIHByZXYgPSArbmV3IERhdGVcbmZ1bmN0aW9uIGZhbGxiYWNrIChmbikge1xuICB2YXIgY3VyciA9ICtuZXcgRGF0ZVxuICB2YXIgbXMgPSBNYXRoLm1heCgwLCAxNiAtIChjdXJyIC0gcHJldikpXG4gIHZhciByZXEgPSBzZXRUaW1lb3V0KGZuLCBtcylcbiAgcmV0dXJuIHByZXYgPSBjdXJyLCByZXFcbn1cblxuLyoqXG4gKiBgY2FuY2VsQW5pbWF0aW9uRnJhbWUoKWBcbiAqL1xuXG52YXIgY2FuY2VsID0gZ2xvYmFsLmNhbmNlbEFuaW1hdGlvbkZyYW1lXG4gIHx8IGdsb2JhbC53ZWJraXRDYW5jZWxBbmltYXRpb25GcmFtZVxuICB8fCBnbG9iYWwubW96Q2FuY2VsQW5pbWF0aW9uRnJhbWVcbiAgfHwgY2xlYXJUaW1lb3V0XG5cbmlmIChGdW5jdGlvbi5wcm90b3R5cGUuYmluZCkge1xuICByZXF1ZXN0ID0gcmVxdWVzdC5iaW5kKGdsb2JhbClcbiAgY2FuY2VsID0gY2FuY2VsLmJpbmQoZ2xvYmFsKVxufVxuXG5leHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1ZXN0XG5leHBvcnRzLmNhbmNlbCA9IGNhbmNlbFxuIiwiaW1wb3J0IHNjcm9sbCBmcm9tICdzY3JvbGwnXG5pbXBvcnQgZG9tIGZyb20gJy4vZG9tLWhlbHBlcnMnXG5cbmNvbnN0IG5hdkhlaWdodCA9ICgpID0+XG4gIGRvbS5maW5kKCdbZGF0YS1oZWFkZXJdJykuY2xpZW50SGVpZ2h0XG5cbmNvbnN0IHJlc29sdmVUYXJnZXQgPSAoaWQpID0+XG4gIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AgKyBkb20uZmluZChpZCkuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wIC0gbmF2SGVpZ2h0KClcblxuY29uc3Qgc2Nyb2xsSGFuZGxlciA9IGZ1bmN0aW9uKGUpIHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpXG4gIHNjcm9sbC50b3AoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCByZXNvbHZlVGFyZ2V0KHRoaXMuZ2V0QXR0cmlidXRlKCdocmVmJykpLCB7IGR1cmF0aW9uOiA1MDAgfSlcbn1cblxuZG9tLmZpbmRBbGwoJ1tkYXRhLXNjcm9sbC10b10nKVxuICAuZm9yRWFjaChub2RlID0+IHtcbiAgICBub2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgc2Nyb2xsSGFuZGxlcilcbiAgfSlcbiIsImltcG9ydCBkb20gZnJvbSAnLi9kb20taGVscGVycydcblxuY29uc3QgcGFnZSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudFxuY29uc3QgaGVhZGVyID0gZG9tLmZpbmQoJ1tkYXRhLWhlYWRlcl0nKVxubGV0IHNjcm9sbCwgYnVmZmVyLCBkb2NrZWRcblxuXG5jb25zdCB1cGRhdGUgPSAoKSA9PiB7XG4gIGxldCBkb2NrID0gc2Nyb2xsID4gNSAmJiAhZG9ja2VkXG4gIGxldCB1bmRvY2sgPSBzY3JvbGwgPD0gNSAmJiBkb2NrZWRcblxuICBpZiAoZG9jayB8fCB1bmRvY2spIGRvY2tlZCA9IGhlYWRlci5jbGFzc0xpc3QudG9nZ2xlKCdoZWFkZXItLWRvY2tlZCcpXG4gIGJ1ZmZlciA9IGZhbHNlXG59XG5cbmNvbnN0IHJlcXVlc3RVcGRhdGUgPSAoKSA9PiB7XG4gIGlmICghYnVmZmVyKSByZXF1ZXN0QW5pbWF0aW9uRnJhbWUodXBkYXRlKVxuICBidWZmZXIgPSB0cnVlXG4gIHNjcm9sbCA9IHBhZ2Uuc2Nyb2xsVG9wXG59XG5cbndpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdzY3JvbGwnLCByZXF1ZXN0VXBkYXRlKVxuIiwiaW1wb3J0IGRvbSBmcm9tICcuL2RvbS1oZWxwZXJzJ1xuXG5jb25zdCBnZXRGbGlwSGFuZGxlciA9IChub2RlKSA9PiAoKSA9PiBub2RlLmNsYXNzTGlzdC5hZGQoJ2NhcmQtLWZsaXAnKVxuY29uc3QgZ2V0VW5mbGlwSGFuZGxlciA9IChub2RlKSA9PiAoKSA9PiBub2RlLmNsYXNzTGlzdC5yZW1vdmUoJ2NhcmQtLWZsaXAnKVxuXG5kb20uZmluZEFsbCgnW2RhdGEtY2FyZF0nKVxuICAuZm9yRWFjaChub2RlID0+IHtcbiAgICBkb20uZmluZEFsbCgnW2RhdGEtY2FyZC1mbGlwXScsIG5vZGUpXG4gICAgICAuZm9yRWFjaChmbGlwTm9kZSA9PiB7XG4gICAgICAgIGZsaXBOb2RlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZ2V0RmxpcEhhbmRsZXIobm9kZSkpXG4gICAgICB9KVxuXG4gICAgZG9tLmZpbmRBbGwoJ1tkYXRhLWNhcmQtdW5mbGlwXScsIG5vZGUpXG4gICAgICAuZm9yRWFjaCh1bmZsaXBOb2RlID0+IHtcbiAgICAgICAgdW5mbGlwTm9kZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGdldFVuZmxpcEhhbmRsZXIobm9kZSkpXG4gICAgICB9KVxuICB9KVxuIiwiaW1wb3J0IGZldGNoIGZyb20gJy4vZmV0Y2gnXG5cbmNvbnN0IG1hcE5vZGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbWFwJylcbmNvbnN0IGdldFNjcmlwdFRhZyA9IChrZXkpID0+IHtcbiAgbGV0IHRhZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpXG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2FzeW5jJywgJycpXG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ2RlZmVyJywgJycpXG4gIHRhZy5zZXRBdHRyaWJ1dGUoJ3NyYycsIGBodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvanM/a2V5PSR7a2V5fSZjYWxsYmFjaz1pbml0TWFwYClcbiAgcmV0dXJuIHRhZ1xufVxuXG5pZiAobWFwTm9kZSkge1xuICBmZXRjaCgnL2Fzc2V0cy9kYXRhL21hcC1jb25maWcuanNvbicpXG4gICAgLnRoZW4oY29uZmlnID0+IHtcbiAgICAgIGxldCB7IGtleSwgb3B0aW9ucywgbWFya2VyOiBwb3NpdGlvbiB9ID0gSlNPTi5wYXJzZShjb25maWcpXG5cbiAgICAgIGNvbnN0IGluaXQgPSB7XG4gICAgICAgIG1hcDogKCkgPT4gbmV3IGdvb2dsZS5tYXBzLk1hcChtYXBOb2RlLCBvcHRpb25zKSxcbiAgICAgICAgbWFya2VyOiAobWFwKSA9PiBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHsgcG9zaXRpb24sIG1hcCB9KVxuICAgICAgfVxuXG4gICAgICB3aW5kb3cuaW5pdE1hcCA9ICgpID0+IHtcbiAgICAgICAgaW5pdC5tYXJrZXIoaW5pdC5tYXAoKSlcbiAgICAgIH1cblxuICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChnZXRTY3JpcHRUYWcoa2V5KSlcbiAgICB9KVxuICAgIC5jYXRjaChlcnIgPT4gY29uc29sZS5sb2coZXJyKSlcbn1cbiJdfQ==
