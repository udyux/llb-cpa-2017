!function(){"use strict";function n(n,e,i,o,r){function a(t){if(l)return r(new Error("Scroll cancelled"),e[n]);var o=+new Date,m=Math.min(1,(o-c)/f),p=u(m);e[n]=p*(i-s)+s,d(m<1?a:function(){r(null,e[n])})}var c=+new Date,s=e[n],l=!1,u=t,f=350;return"function"==typeof o?r=o:(u=(o=o||{}).ease||u,f=o.duration||f,r=r||function(){}),s===i?r(new Error("Element already at target scroll position"),e[n]):(d(a),function(){l=!0})}function t(n){return.5*(1-Math.cos(Math.PI*n))}var e=function(n){var t=new XMLHttpRequest,e=function(){};return t.open("GET",n,!0),{then:function(n){return t.onload=function(){(this.status<200||this.status>=400)&&e&&e(this),n(this.response)},t.onerror=e,t.send(),{catch:function(n){e=n}}}}};e("/assets/icons/sprite.svg").then(function(n){var t=document.createElement("figure");t.style.display="none",t.innerHTML=n,document.body.insertBefore(t,document.body.children[0])}).catch(function(n){console.warn("Icon spritesheet could not be loaded\n",n)});var i=document.scrollingElement||document.documentElement,o={scrollBox:i,find:function(n){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(n)},findAll:function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return[].concat(function(n){if(Array.isArray(n)){for(var t=0,e=Array(n.length);t<n.length;t++)e[t]=n[t];return e}return Array.from(n)}(t.querySelectorAll(n)))},get scrollTop(){return i.scrollTop}},r=o.find("[data-timer]"),a=0,c=o.findAll("[data-slide]").map(function(n,t){return t?n.classList.remove("active-slide"):n.classList.add("active-slide"),n}),s=function(){c[a].classList.remove("active-slide"),a=a+1===c.length?0:a+1,c[a].classList.add("active-slide"),r.classList.add("running")};r.addEventListener("transitionend",function(){r.classList.remove("running"),setTimeout(s,125)}),setTimeout(function(){r.classList.add("running")},250);var l="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},u="undefined"!=typeof window?window:void 0!==l?l:"undefined"!=typeof self?self:{},d=function(n,t){return t={exports:{}},n(t,t.exports),t.exports}(function(n,t){var e=u.requestAnimationFrame||u.webkitRequestAnimationFrame||u.mozRequestAnimationFrame||function(n){var t=+new Date,e=Math.max(0,16-(t-i)),o=setTimeout(n,e);return i=t,o},i=+new Date,o=u.cancelAnimationFrame||u.webkitCancelAnimationFrame||u.mozCancelAnimationFrame||clearTimeout;Function.prototype.bind&&(e=e.bind(u),o=o.bind(u)),(n.exports=e).cancel=o}),f=function(t,e,i,o){return n("scrollTop",t,e,i,o)},m=function(n){return o.scrollTop+o.find(n).getBoundingClientRect().top-o.find("[data-header]").clientHeight},p=function(n){n.preventDefault(),f(o.scrollBox,m(this.getAttribute("href")),{duration:500})};o.findAll("[data-scroll-to]").forEach(function(n){n.addEventListener("click",p)});var v=o.find("[data-header]"),h=void 0,g=void 0,w=void 0,y=function(){(h>10&&!w||h<=10&&w)&&(w=v.classList.toggle("header--docked")),g=!1},A=function(){g||requestAnimationFrame(y),g=!0,h=o.scrollTop};A(),window.addEventListener("scroll",A);o.findAll("[data-card]").forEach(function(n){o.findAll("[data-card-flip]",n).forEach(function(t){t.addEventListener("click",function(n){return function(){return n.classList.add("card--flip")}}(n))}),o.findAll("[data-card-unflip]",n).forEach(function(t){t.addEventListener("click",function(n){return function(){return n.classList.remove("card--flip")}}(n))})});var E=document.getElementById("map");E&&e("/assets/data/map-config.json").then(function(n){var t=JSON.parse(n),e=t.key,i=t.options,o=t.marker,r=function(){return new google.maps.Map(E,i)},a=function(n){return new google.maps.Marker({position:o,map:n,icon:"/assets/media/logo/llb-map.png"})};window.initMap=function(){a(r())},document.body.appendChild(function(n){var t=document.createElement("script");return t.setAttribute("async",""),t.setAttribute("defer",""),t.setAttribute("src","https://maps.googleapis.com/maps/api/js?key="+n+"&callback=initMap"),t}(e))}).catch(function(n){return console.log(n)});var L=new Date;o.findAll("time[data-year]").forEach(function(n){n.innerHTML+=L.getFullYear()})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
