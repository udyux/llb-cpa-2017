!function(){"use strict";function n(n,e,o,i,r){function a(t){if(s)return r(new Error("Scroll cancelled"),e[n]);var i=+new Date,m=Math.min(1,(i-c)/f),p=d(m);e[n]=p*(o-u)+u,l(m<1?a:function(){r(null,e[n])})}var c=+new Date,u=e[n],s=!1,d=t,f=350;return"function"==typeof i?r=i:(d=(i=i||{}).ease||d,f=i.duration||f,r=r||function(){}),u===o?r(new Error("Element already at target scroll position"),e[n]):(l(a),function(){s=!0})}function t(n){return.5*(1-Math.cos(Math.PI*n))}var e=function(n){var t=new XMLHttpRequest,e=function(){};return t.open("GET",n,!0),{then:function(n){return t.onload=function(){(this.status<200||this.status>=400)&&e&&e(this),n(this.response)},t.onerror=e,t.send(),{catch:function(n){e=n}}}}};e("/assets/icons/sprite.svg").then(function(n){var t=document.createElement("figure");t.style.display="none",t.innerHTML=n,document.body.insertBefore(t,document.body.children[0])}).catch(function(n){console.warn("Icon spritesheet could not be loaded\n",n)});var o=function(n){return(arguments.length>1&&void 0!==arguments[1]?arguments[1]:document).querySelector(n)},i=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:document;return[].concat(function(n){if(Array.isArray(n)){for(var t=0,e=Array(n.length);t<n.length;t++)e[t]=n[t];return e}return Array.from(n)}(t.querySelectorAll(n)))},r=o("[data-timer]"),a=0,c=i("[data-slide]").map(function(n,t){return t?n.classList.remove("active-slide"):n.classList.add("active-slide"),n}),u=function(){c[a].classList.remove("active-slide"),a=a+1===c.length?0:a+1,c[a].classList.add("active-slide"),r.classList.add("running")};r.addEventListener("transitionend",function(){r.classList.remove("running"),setTimeout(u,125)}),setTimeout(function(){r.classList.add("running")},250);var s="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:{},d="undefined"!=typeof window?window:void 0!==s?s:"undefined"!=typeof self?self:{},l=function(n,t){return t={exports:{}},n(t,t.exports),t.exports}(function(n,t){var e=d.requestAnimationFrame||d.webkitRequestAnimationFrame||d.mozRequestAnimationFrame||function(n){var t=+new Date,e=Math.max(0,16-(t-o)),i=setTimeout(n,e);return o=t,i},o=+new Date,i=d.cancelAnimationFrame||d.webkitCancelAnimationFrame||d.mozCancelAnimationFrame||clearTimeout;Function.prototype.bind&&(e=e.bind(d),i=i.bind(d)),(n.exports=e).cancel=i}),f=function(t,e,o,i){return n("scrollTop",t,e,o,i)},m=function(n){return document.documentElement.scrollTop+o(n).getBoundingClientRect().top-o("[data-header]").clientHeight},p=function(n){n.preventDefault(),f(document.documentElement,m(this.getAttribute("href")),{duration:500})};i("[data-scroll-to]").forEach(function(n){n.addEventListener("click",p)});var v=document.documentElement,h=o("[data-header]"),g=void 0,w=void 0,y=void 0,E=function(){(g>5&&!y||g<=5&&y)&&(y=h.classList.toggle("header--docked")),w=!1};window.addEventListener("scroll",function(){w||requestAnimationFrame(E),w=!0,g=v.scrollTop});i("[data-card]").forEach(function(n){i("[data-card-flip]",n).forEach(function(t){t.addEventListener("click",function(n){return function(){return n.classList.add("card--flip")}}(n))}),i("[data-card-unflip]",n).forEach(function(t){t.addEventListener("click",function(n){return function(){return n.classList.remove("card--flip")}}(n))})});e("/assets/data/map-config.json").then(function(n){var t=JSON.parse(n),e=t.key,o=t.options,i=t.marker,r=function(){return new google.maps.Map(document.getElementById("map"),o)},a=function(n){return new google.maps.Marker({position:i,map:n})};window.initMap=function(){a(r())},document.body.appendChild(function(n){var t=document.createElement("script");return t.setAttribute("async",""),t.setAttribute("defer",""),t.setAttribute("src","https://maps.googleapis.com/maps/api/js?key="+n+"&callback=initMap"),t}(e))}).catch(function(n){return console.log(n)})}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
